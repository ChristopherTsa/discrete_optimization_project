6_1
Itération: 0
Arcs utilisés dans la solution actuelle:
Arc: 1 -> 3
Arc: 2 -> 5
Arc: 3 -> 2
Solution optimale trouvée.
Temps de résolution (s) :0.0065038204193115234
Objective value: 12.0
Solution optimale: 
Arc: 1 -> 3
Arc: 2 -> 5
Arc: 3 -> 2

20_1
Itération: 1942
Arcs utilisés dans la solution actuelle:
Arc: 3 -> 17
Arc: 4 -> 3
Arc: 9 -> 4
Arc: 15 -> 18
Arc: 17 -> 15
Arc: 18 -> 9
Arc: 19 -> 10
Sous-tour détecté: Set([4, 15, 18, 9, 17, 3])
Sous-tours détectés: Any[Set([4, 15, 18, 9, 17, 3])]
Ajout de la contrainte de coupure pour le sous-tour: Set([4, 15, 18, 9, 17, 3])
Itération: 1943
Arcs utilisés dans la solution actuelle:
Arc: 4 -> 13
Arc: 5 -> 20
Arc: 8 -> 5
Arc: 13 -> 10
Arc: 18 -> 4
Arc: 19 -> 8
Arc: 20 -> 18
Solution optimale trouvée.
Temps de résolution (s) :23727.427119016647
Objective value: 122.0
Solution optimale: 
Arc: 4 -> 13
Arc: 5 -> 20
Arc: 8 -> 5
Arc: 13 -> 10
Arc: 18 -> 4
Arc: 19 -> 8
Arc: 20 -> 18

20_2
Itération: 101
Arcs utilisés dans la solution actuelle:
Arc: 1 -> 5
Arc: 4 -> 9
Arc: 5 -> 10
Arc: 7 -> 4
Arc: 9 -> 13
Arc: 13 -> 18
Arc: 18 -> 7
Sous-tour détecté: Set([4, 13, 7, 18, 9])
Sous-tours détectés: Any[Set([4, 13, 7, 18, 9])]
Ajout de la contrainte de coupure pour le sous-tour: Set([4, 13, 7, 18, 9])
Itération: 102
Arcs utilisés dans la solution actuelle:
Arc: 1 -> 12
Arc: 12 -> 17
Arc: 13 -> 20
Arc: 14 -> 10
Arc: 17 -> 18
Arc: 18 -> 13
Arc: 20 -> 14
Solution optimale trouvée.
Temps de résolution (s) :45.81135416030884
Objective value: 102.0
Solution optimale: 
Arc: 1 -> 12
Arc: 12 -> 17
Arc: 13 -> 20
Arc: 14 -> 10
Arc: 17 -> 18
Arc: 18 -> 13
Arc: 20 -> 14

20_3
Itération: 1033
Arcs utilisés dans la solution actuelle:
Arc: 1 -> 15
Arc: 3 -> 4
Arc: 4 -> 9
Arc: 6 -> 3
Arc: 7 -> 6
Arc: 9 -> 13
Arc: 12 -> 7
Arc: 13 -> 14
Arc: 14 -> 12
Sous-tour détecté: Set([13, 6, 7, 4, 9, 12, 14, 3])
Sous-tours détectés: Any[Set([13, 6, 7, 4, 9, 12, 14, 3])]
Ajout de la contrainte de coupure pour le sous-tour: Set([13, 6, 7, 4, 9, 12, 14, 3])
Itération: 1034
Arcs utilisés dans la solution actuelle:
Arc: 1 -> 12
Arc: 5 -> 15
Arc: 12 -> 17
Arc: 13 -> 14
Arc: 14 -> 5
Arc: 17 -> 18
Arc: 18 -> 13
Solution optimale trouvée.
Temps de résolution (s) :6927.51608300209
Objective value: 106.0
Solution optimale: 
Arc: 1 -> 12
Arc: 5 -> 15
Arc: 12 -> 17
Arc: 13 -> 14
Arc: 14 -> 5
Arc: 17 -> 18
Arc: 18 -> 13

or
Itération: 979
Arcs utilisés dans la solution actuelle:
Arc: 1 -> 15
Arc: 3 -> 6
Arc: 4 -> 3
Arc: 6 -> 12
Arc: 9 -> 4
Arc: 12 -> 14
Arc: 13 -> 9
Arc: 14 -> 13
Sous-tour détecté: Set([4, 6, 13, 9, 12, 14, 3])
Sous-tours détectés: Any[Set([4, 6, 13, 9, 12, 14, 3])]
Ajout de la contrainte de coupure pour le sous-tour: Set([4, 6, 13, 9, 12, 14, 3])
Itération: 980
Arcs utilisés dans la solution actuelle:
Arc: 1 -> 12
Arc: 5 -> 15
Arc: 12 -> 17
Arc: 13 -> 14
Arc: 14 -> 5
Arc: 17 -> 18
Arc: 18 -> 13
Solution optimale trouvée.
Temps de résolution (s) :8664.963688850403
Objective value: 106.0
Solution optimale: 
Arc: 1 -> 12
Arc: 5 -> 15
Arc: 12 -> 17
Arc: 13 -> 14
Arc: 14 -> 5
Arc: 17 -> 18
Arc: 18 -> 13

100_1
Itération: 5
Arcs utilisés dans la solution actuelle:
Arc: 1 -> 5
Arc: 2 -> 45
Arc: 3 -> 8
Arc: 5 -> 10
Arc: 6 -> 12
Arc: 8 -> 17
Arc: 10 -> 3
Arc: 11 -> 42
Arc: 12 -> 72
Arc: 13 -> 47
Arc: 14 -> 80
Arc: 15 -> 2
Arc: 17 -> 36
Arc: 24 -> 6
Arc: 25 -> 39
Arc: 29 -> 13
Arc: 32 -> 60
Arc: 35 -> 71
Arc: 36 -> 32
Arc: 39 -> 82
Arc: 42 -> 56
Arc: 43 -> 44
Arc: 44 -> 24
Arc: 45 -> 25
Arc: 47 -> 14
Arc: 56 -> 43
Arc: 60 -> 11
Arc: 65 -> 35
Arc: 71 -> 15
Arc: 72 -> 65
Arc: 80 -> 29
Arc: 81 -> 88
Arc: 82 -> 87
Arc: 83 -> 100
Arc: 85 -> 90
Arc: 86 -> 81
Arc: 87 -> 95
Arc: 88 -> 92
Arc: 89 -> 85
Arc: 90 -> 86
Arc: 91 -> 89
Arc: 92 -> 93
Arc: 93 -> 96
Arc: 94 -> 91
Arc: 95 -> 98
Arc: 96 -> 97
Arc: 97 -> 83
Arc: 98 -> 94
Arc: 100 -> 99
Sous-tour détecté: Set([13, 29, 47, 14, 80])
Sous-tours détectés: Any[Set([13, 29, 47, 14, 80])]
Ajout de la contrainte de coupure pour le sous-tour: Set([13, 29, 47, 14, 80])
Itération: 6
Arcs utilisés dans la solution actuelle:
Arc: 1 -> 5
Arc: 2 -> 45
Arc: 3 -> 8
Arc: 5 -> 10
Arc: 6 -> 43
Arc: 8 -> 17
Arc: 10 -> 3
Arc: 11 -> 42
Arc: 13 -> 47
Arc: 15 -> 2
Arc: 17 -> 36
Arc: 21 -> 80
Arc: 24 -> 6
Arc: 25 -> 39
Arc: 29 -> 13
Arc: 32 -> 60
Arc: 35 -> 71
Arc: 36 -> 32
Arc: 39 -> 82
Arc: 42 -> 56
Arc: 43 -> 44
Arc: 44 -> 61
Arc: 45 -> 25
Arc: 47 -> 55
Arc: 55 -> 65
Arc: 56 -> 24
Arc: 60 -> 11
Arc: 61 -> 21
Arc: 65 -> 35
Arc: 71 -> 15
Arc: 80 -> 29
Arc: 81 -> 88
Arc: 82 -> 87
Arc: 83 -> 99
Arc: 85 -> 90
Arc: 86 -> 81
Arc: 87 -> 95
Arc: 88 -> 92
Arc: 89 -> 85
Arc: 90 -> 86
Arc: 91 -> 89
Arc: 92 -> 93
Arc: 93 -> 96
Arc: 94 -> 91
Arc: 95 -> 98
Arc: 96 -> 97
Arc: 97 -> 100
Arc: 98 -> 94
Arc: 100 -> 83
Solution optimale trouvée.
Temps de résolution (s) :16.71944308280945
Objective value: 438.0
Solution optimale: 
Arc: 1 -> 5
Arc: 2 -> 45
Arc: 3 -> 8
Arc: 5 -> 10
Arc: 6 -> 43
Arc: 8 -> 17
Arc: 10 -> 3
Arc: 11 -> 42
Arc: 13 -> 47
Arc: 15 -> 2
Arc: 17 -> 36
Arc: 21 -> 80
Arc: 24 -> 6
Arc: 25 -> 39
Arc: 29 -> 13
Arc: 32 -> 60
Arc: 35 -> 71
Arc: 36 -> 32
Arc: 39 -> 82
Arc: 42 -> 56
Arc: 43 -> 44
Arc: 44 -> 61
Arc: 45 -> 25
Arc: 47 -> 55
Arc: 55 -> 65
Arc: 56 -> 24
Arc: 60 -> 11
Arc: 61 -> 21
Arc: 65 -> 35
Arc: 71 -> 15
Arc: 80 -> 29
Arc: 81 -> 88
Arc: 82 -> 87
Arc: 83 -> 99
Arc: 85 -> 90
Arc: 86 -> 81
Arc: 87 -> 95
Arc: 88 -> 92
Arc: 89 -> 85
Arc: 90 -> 86
Arc: 91 -> 89
Arc: 92 -> 93
Arc: 93 -> 96
Arc: 94 -> 91
Arc: 95 -> 98
Arc: 96 -> 97
Arc: 97 -> 100
Arc: 98 -> 94
Arc: 100 -> 83